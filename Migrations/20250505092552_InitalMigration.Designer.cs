// <auto-generated />
using System;
using JwtAuthDemo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JwtAuthDemo.Migrations
{
    [DbContext(typeof(Appdatacontext))]
    [Migration("20250505092552_InitalMigration")]
    partial class InitalMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JwtAuthDemo.Models.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Citizenship")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("Sex")
                        .HasColumnType("character(1)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.CertificationsLicensces", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OtherCertification")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PRCLicense")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CertificationsLicenses");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.Educationalbackground", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CollegeSchool")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CollegeYearAttended2")
                        .HasColumnType("integer");

                    b.Property<string>("DegreeReceived")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ElementarySchool")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ElementaryYearAttended")
                        .HasColumnType("integer");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("HighSchool")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HighSchoolYearAttended")
                        .HasColumnType("integer");

                    b.Property<string>("Others")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpecialSkills")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Educationalbackground");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.GovernmentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("PagIbig")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhilHealth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SSS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TinID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("GovernmentInfo");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.PersonalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BloodType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Citizenship")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ContactNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateApplied")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("FathersName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FathersOccupation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("HiredDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MothersName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MothersOccupation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PermanentAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PersonContactedInCaseOfEmergency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("integer");

                    b.Property<string>("PositionDesired")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PresentAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("Sex")
                        .HasColumnType("character(1)");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PersonalInformation");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.TrainingInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("RelevantTrainings")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TrainingDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TrainingInfo");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.WorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndtDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PreviousCompanies")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkExperience");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.WorkInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("Employmentstatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reportorial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkInfo");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.CertificationsLicensces", b =>
                {
                    b.HasOne("JwtAuthDemo.Models.Entities.Employee", "Employee")
                        .WithMany("CertificationsLicenses")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.Educationalbackground", b =>
                {
                    b.HasOne("JwtAuthDemo.Models.Entities.Employee", "Employee")
                        .WithMany("Educationalbackround")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.GovernmentInfo", b =>
                {
                    b.HasOne("JwtAuthDemo.Models.Entities.Employee", "Employee")
                        .WithMany("GovernmentInfo")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.PersonalInformation", b =>
                {
                    b.HasOne("JwtAuthDemo.Models.Entities.Employee", "Employee")
                        .WithMany("PersonalInformation")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.TrainingInfo", b =>
                {
                    b.HasOne("JwtAuthDemo.Models.Entities.Employee", "Employee")
                        .WithMany("TrainingInfo")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.WorkExperience", b =>
                {
                    b.HasOne("JwtAuthDemo.Models.Entities.Employee", "Employee")
                        .WithMany("WorkExerience")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Info.WorkInfo", b =>
                {
                    b.HasOne("JwtAuthDemo.Models.Entities.Employee", "Employee")
                        .WithMany("WorkInfo")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("JwtAuthDemo.Models.Entities.Employee", b =>
                {
                    b.Navigation("CertificationsLicenses");

                    b.Navigation("Educationalbackround");

                    b.Navigation("GovernmentInfo");

                    b.Navigation("PersonalInformation");

                    b.Navigation("TrainingInfo");

                    b.Navigation("WorkExerience");

                    b.Navigation("WorkInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
